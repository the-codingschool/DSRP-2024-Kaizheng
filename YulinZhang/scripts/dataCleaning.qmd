Install and load packages

```{r}
install.packages(c("sf", "tidyr", "dplyr", "lubridate", "ggplot2"))
library("sf")
library("tidyr")
library("dplyr")
library("lubridate")
library("ggplot2")
library("scales")
```

Get the dataset

```{r}
prefix <- "Project_Code/Data/"
data <- read.csv(paste0(prefix, list.files(prefix)))
head(data)

get_hrs <- function(date) {
  return (as.numeric(format(date, format = "%H")))
}
ts <- strptime(data$collision_time, format = "%H:%M:%S")
data$hrs <- get_hrs(round_date(ts, unit = "hour"))
```

Visualization

```{r}
## Graph the number of collisions every hour in the day
## Observation: Most collisions occur around 8 am and 6 pm (rush hours)
sam_col <- data |> slice_sample(n = 1e4)
ggplot(sam_col, aes(x = hrs)) +
  geom_bar() +
  labs(title = "Time Frequencies of Car Collisions",
       x = "Hour in the Day",
       y = "Frequency") +
  scale_x_continuous(breaks = seq(0, 23, 2))
```

Graph

```{r}
## Graph party ages vs. casualty
## Observation: Slightly negative correlations
## Not enough data? Outliers?
sam_age <- data |>
  drop_na(party_age, number_injured, number_killed) |>
  filter(party_age > 0) |>
  group_by(party_age) |>
  summarize(hurt = mean(number_injured + number_killed)) |>
  slice_sample(n = 1e4)

ggplot(sam_age, aes(x = party_age, y = hurt)) +
  geom_point() +
  scale_y_continuous(breaks = breaks_pretty())

```

Graph 2

```{r}
## Graph lighting vs. casualty
## Observation: Dark - No Street Light = max casualty
sam_lgh <- data |>
  drop_na(lighting, number_injured, number_killed) |>
  group_by(lighting) |>
  summarize(hurt = mean(number_injured + number_killed)) |>
  slice_sample(n = 1e4)

ggplot(sam_lgh, aes(lighting, hurt)) +
  geom_col()
```

Graph

```{r}
## Graph locations on a map
## Observation: Weird road conditions are clustered
sam_map <- data |>
  drop_na(tb_latitude, tb_longitude) |>
  filter(!road_cond_1 %in% c("Not Stated", "Other", "No Unusual Condition"))

map <- st_as_sf(sam_map, coords = c("tb_longitude", "tb_latitude"))
map <- st_set_crs(map, 4326)
ggplot(map) + geom_sf(aes(color = road_cond_1))
```

Graph

```{r}
## Graph hour in the day vs. causality
sam_hrs <- data |>
  drop_na(number_injured, number_killed) |>
  group_by(hrs) |>
  summarize(hurt = mean(number_injured + number_killed)) |>
  slice_sample(n = 1e4)

ggplot(sam_hrs, aes(x = hrs, y = hurt)) +
  geom_point()
```

Investigate research questions

``` r
## Train a KNN model to classify road conditions based on locations here!
```
